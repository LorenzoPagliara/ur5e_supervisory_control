/* -------------------------------------------------------------------
 *
 * This module has been developed by the Automatic Control Group
 * of the University of Salerno, Italy.
 *
 * Title:   task_space_mock_controller.hpp
 * Author:  Davide Risi
 * Org.:    UNISA
 * Date:    Dec 17, 2024
 *
 * This class implements a mock controller for the task space.
 *
 * -------------------------------------------------------------------
 */

#pragma once

#include <rclcpp/rclcpp.hpp>
#include <rclcpp_lifecycle/state.hpp>

#include <controller_interface/chainable_controller_interface.hpp>
#include <geometry_msgs/msg/pose_stamped.hpp>
#include <hardware_interface/handle.hpp>

#include <acg_control_msgs/msg/task_space_trajectory_point.hpp>
#include <acg_hardware_interface_facade/reference_reader.hpp>
#include <acg_common_libraries/diagnostics.hpp>

// auto-generated by generate_parameter_library
#include "task_space_mock_controller/task_space_mock_controller_parameters.hpp"
#include "task_space_mock_controller/visibility_control.h"

namespace task_space_mock_controller
{

/**
 * @class TaskSpaceMockController
 * @brief A class representing a mock controller for the task space reference generator.
 *
 * This class implements the \c controller_interface::ChainableControllerInterface interface.
 * All of the public methods override the corresponding methods of the \c controller_interface::ChainableControllerInterface class.
 * Please refer to the documentation of the base class for more details.
 */
class TaskSpaceMockController : public controller_interface::ChainableControllerInterface
{
public:
  TASK_SPACE_MOCK_CONTROLLER_PUBLIC
  controller_interface::CallbackReturn on_init() override;

  TASK_SPACE_MOCK_CONTROLLER_PUBLIC
  controller_interface::InterfaceConfiguration command_interface_configuration() const override;

  TASK_SPACE_MOCK_CONTROLLER_PUBLIC
  controller_interface::InterfaceConfiguration state_interface_configuration() const override;

  TASK_SPACE_MOCK_CONTROLLER_PUBLIC
  controller_interface::CallbackReturn on_configure(const rclcpp_lifecycle::State&) override;

  TASK_SPACE_MOCK_CONTROLLER_PUBLIC
  controller_interface::CallbackReturn on_activate(const rclcpp_lifecycle::State&) override;

  TASK_SPACE_MOCK_CONTROLLER_PUBLIC
  controller_interface::CallbackReturn on_deactivate(const rclcpp_lifecycle::State&) override;

protected:
  // The following methods are overridden from the base class. Refer to the base class documentation for details.
  std::vector<hardware_interface::CommandInterface> on_export_reference_interfaces() override;
  controller_interface::return_type update_reference_from_subscribers() override;
  controller_interface::return_type update_and_write_commands(const rclcpp::Time& time, const rclcpp::Duration& period) override;

  // Variable to a listener for the controller parameters
  std::shared_ptr<task_space_mock_controller::ParamListener> parameter_handler_;

  // Variables to handle the publication of the task space reference received from the reference generator controller
  double publish_frequency_{ 5.0 };
  std::shared_ptr<acg_diagnostics::PeriodicPublisher<geometry_msgs::msg::PoseStamped>> periodic_publisher_;

  // Variables to store the current task space reference and the frame in which it is expressed
  acg_control_msgs::msg::TaskSpacePoint task_space_reference_;
  std::string task_space_reference_frame_;

  // Variables to handle the task space reference received from the reference generator controller
  acg_hardware_interface_facade::ReferenceReader reference_reader_;
};

}  // namespace task_space_mock_controller
